清晰并且简洁
Go 努力保持小并且优美，你可以在短短几行代码里做许多事情。
并行
Go 让函数很容易成为非常轻量的线程。这些线程在Go 中被叫做goroutines a；
Channel
这些goroutines 之间的通讯由channel [37, 28] 完成；
快速
编译很快，执行也很快。目标是跟C 一样快。编译时间用秒计算；
安全
Go 有垃圾收集，在Go 中无须free()，语言会处理这一切；
标准的格式化
Go 程序可以被格式化为程序员希望的（几乎）任何形式，但是官方格式是存在的。
标准也非常简单：gofmt 的输出就是官方认可的格式。
类型后置
类型在变量名的后面，像这样var a int，来代替C 中的int a;；
UTF-8
任何地方都是UTF-8的，包括字符串以及程序代码。你可以在代码中使用 你= 你 + 1；
开源
Go 的许可证是完全开源的，查阅Go 发布的源码中的LICENSE 文件。
开心
用Go 写程序会非常开心！

内建函数
内建函数的用途简介：
close ：用于 channel 通讯。使用它来关闭 channel。 
delete ：用于在 map 中删除实例。 
len 和 cap ：可用于不同的类型，len 用于返回字符串、slice 和数组的长度。
new ：用于各种类型的内存分配。
make ：用于内建类型（map、slice 和 channel）的内存分配。
copy ：用于复制 slice。参阅本章的 “slice”。 
append ：用于追加 slice。参阅本章的 “slice”。 
panic 和 recover ：用于异常处理机制。
print 和 println ：是底层打印函数，可以在不引入 fmt 包的情况下使用。它们主要用于调试。 
complex、real 和 imag ：全部用于处理 复数。有了之前给的简单的例子，不用再进一步讨论复数了。
